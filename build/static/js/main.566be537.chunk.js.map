{"version":3,"sources":["components/Input/index.tsx","api.ts","context/UserContext.tsx","components/Login/index.tsx","components/User/index.tsx","reducer/emailReducer.ts","context/EmailContext.tsx","components/MessageList/index.tsx","components/MessageView/index.tsx","components/Wrapper/index.tsx","App.tsx","index.tsx"],"names":["Input","props","handleChange","name","id","value","htmlFor","toUpperCase","onChange","type","FAKE_USER","firstName","lastName","username","avatar","FAKE_EMAILS","subject","body","preview","LOTS_OF_EMAILS","Array","fill","map","_","email","Math","floor","random","length","substr","forEach","generatePreview","initialState","user","logout","login","UserContext","createContext","UserProvider","children","useState","setUser","Provider","useUser","useContext","useUserActions","Login","onLogin","initialErrorMessage","message","password","userInfo","setUserInfo","errors","setErrors","loading","setLoading","e","target","noValidate","onSubmit","preventDefault","Promise","resolve","reject","setTimeout","then","catch","error","User","className","src","alt","onClick","emailReducer","state","action","emails","currentEmail","EmailContext","setCurrentEmail","EmailProvider","useReducer","dispatch","useEffect","useEmail","Email","memo","MessageList","item","key","MessageViewer","console","log","Wrapper","MessageView","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.566be537.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react'\n\ninterface Props {\n  handleChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  id: string;\n  name: string;\n  value: string;\n}\n\nexport const Input = (props: Props) => {\n  const { handleChange, name, id, value } = props;\n\n  return (\n    <>\n      <label\n        htmlFor={id}\n      >\n        {name.toUpperCase()}\n      </label>\n      <input\n        onChange={handleChange}\n        type=\"text\"\n        name={name}\n        id={id}\n        value={value}\n      />\n    </>\n  )\n}\n","import { EmailType } from \"./app.types\";\n\nconst generatePreview = (email: EmailType) => {\n  return email.preview = email.body.substr(0, 46)\n}\n\nexport const FAKE_USER = {\n  firstName: 'Greg',\n  lastName: 'Pfaff',\n  username: 'gpfaff',\n  avatar:\n    'https://avatars1.githubusercontent.com/u/1102168?s=60&v=4'\n};\n\nexport const FAKE_EMAILS = [\n  {\n    id: 0,\n    subject: 'Hey Greg',\n    body: 'Yo, just wanted to say hey.',\n    preview: '',\n  },\n  {\n    id: 1,\n    subject: 'React is great',\n    body: 'I thought I should let you know.',\n    preview: '',\n  },\n  {\n    id: 2,\n    subject: 'REQUEST FOR ASSISTANCE',\n    body:\n      'If you send me your bank account number I will reward you with $10 million whole US dollars.',\n    preview: '',\n  }\n];\n\nconst LOTS_OF_EMAILS = Array(1000)\n  .fill(0)\n  .map(_ => {\n    let email =\n      FAKE_EMAILS[\n        Math.floor(Math.random() * FAKE_EMAILS.length)\n      ];\n    return {\n      ...email,\n      id: Math.random(),\n      preview: `${email.body.substr(0, 46)}...`\n    };\n  });\n\n// Generate a preview\nFAKE_EMAILS.forEach(\n  email => (generatePreview(email))\n);\n\nexport const login = (username: string, password: string) => {\n  return new Promise((resolve: any, reject) => {\n    setTimeout(() => {\n      if (\n        username === 'gpfaff' &&\n        password === 'secret'\n      ) {\n        resolve(FAKE_USER);\n      } else {\n        reject({\n          message: 'Invalid username or password'\n        });\n      }\n    }, 300);\n  });\n}\n\nexport const fetchEmails = () => {\n  return new Promise((resolve: any, reject) => {\n    setTimeout(() => {\n      resolve(LOTS_OF_EMAILS)\n    }, 300)\n  })\n}","import React, {\n  useState,\n  SetStateAction,\n  createContext,\n  ReactNode,\n} from 'react';\nimport { useContext } from 'react';\n\nimport { UserContextType, UserType } from '../app.types';\n\ninterface Props {\n  children: ReactNode;\n}\n\nconst initialState = {\n  user: {\n    avatar: '',\n    firstName: '',\n    lastName: '',\n    username: '',\n  },\n  logout: () => null,\n  login: (user: UserType) => user,\n}\n\nconst UserContext = createContext<UserContextType>(initialState)\n\nexport const UserProvider = (props: Props) => {\n  const { children } = props;\n  const [user, setUser] = useState(initialState.user);\n  const login = (user: SetStateAction<UserType>) => setUser(user);\n  const logout = () => setUser(initialState.user);\n\n  const value = { user, login, logout };\n\n  return (\n    <UserContext.Provider value={value}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nexport const useUser = () => {\n  const { user } = useContext(UserContext);\n  return user;\n}\n\nexport const useUserActions = () => {\n  const { login, logout } = useContext(UserContext);\n  return { login, logout }\n}\n\nexport default UserContext;","import React, {\n  ChangeEvent,\n  FormEvent,\n  useState,\n} from 'react'\nimport { LoginType } from '../../app.types';\nimport { Input } from '../Input';\nimport { login } from '../../api';\nimport { useUserActions } from '../../context/UserContext';\n\nimport './index.css'\n\nexport const Login = () => {\n  const initialLoginInfo = {\n    username: '',\n    password: '',\n  };\n\n  const { login: onLogin } = useUserActions();\n\n  const initialErrorMessage = {\n    message: ''\n  }\n\n  const [userInfo, setUserInfo] = useState<LoginType>(initialLoginInfo);\n\n  const [errors, setErrors] = useState(initialErrorMessage);\n  const [loading, setLoading] = useState(false);\n\n  const { username, password } = userInfo;\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setUserInfo({ ...userInfo, [name]: value });\n    setErrors({message: ''});\n  }\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    setErrors(initialErrorMessage);\n    setLoading(true);\n    login(username, password)\n      .then((user: any) => {\n        setLoading(false);\n        onLogin(user);\n      })\n      .catch((error: any) => {\n        setErrors(error);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form\n        noValidate\n        onSubmit={handleSubmit}\n      >\n        {loading && <p>Loading ...</p>}\n        {errors && <p>{errors.message}</p>}\n        <Input\n          value={username}\n          handleChange={handleChange}\n          name=\"username\"\n          id=\"username\"\n        />\n        <Input\n          value={password}\n          handleChange={handleChange}\n          name=\"password\"\n          id=\"password\"\n        />\n        <button\n          type=\"submit\"\n        >\n          Login\n        </button>\n      </form>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useUserActions, useUser } from '../../context/UserContext';\nimport './index.css';\n\nconst User = () => {\n  const { avatar, firstName, lastName, username } = useUser();\n  const { logout } = useUserActions();\n\n  return (\n    <div className='user'>\n      <div>\n        <img\n          src={avatar}\n          alt={`${firstName} ${lastName}`}\n        />\n        <h2>{username}</h2>\n      </div>\n      <div>\n        <p>{firstName} {lastName}</p>\n        <button className=\"logout\" onClick={logout}>Logout</button>\n      </div>\n    </div>\n  )\n}\n\nexport default User\n","export const emailReducer = (state: any, action: any) => {\n  switch(action.type) {\n    case 'LOADING':\n      return {\n        ...state,\n        loading: true,\n        errors: null,\n      }\n    case 'SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        emails: action.emails,\n      }\n    case 'ERROR':\n      return {\n        ...state,\n        loading: false,\n        errors: action.errors,\n      }\n    case 'SELECT':\n      return {\n        ...state,\n        currentEmail: action.currentEmail,\n      }\n    default:\n      return state;\n  }\n}","import React, {\n  createContext,\n  useEffect,\n  useReducer,\n  ReactNode,\n  useContext,\n} from 'react';\n\nimport { EmailType, EmailContextType } from '../app.types';\n\nimport { emailReducer } from '../reducer/emailReducer';\n\nimport { fetchEmails } from '../api';\n\ninterface Props {\n  children: ReactNode;\n}\n\nconst initialState = {\n  emails: [],\n  errors: null,\n  loading: false,\n  currentEmail: {\n    id: 0,\n    subject: '',\n    body: '',\n    preview: '',\n  },\n  preview: '',\n  setCurrentEmail: (currentEmail: any) => currentEmail\n}\n\nconst EmailContext = createContext<EmailContextType>(initialState);\n\nexport const EmailProvider = (props: Props) => {\n  const { children } = props;\n  const [state, dispatch] = useReducer(emailReducer, {\n    emails: [],\n    loading: false,\n    error: null,\n    currentEmail: null,\n  })\n\n  useEffect(() => {\n    dispatch({ type: 'LOADING' })\n    fetchEmails()\n      .then((emails: any) => dispatch({ type: 'SUCCESS', emails }))\n      .catch(error => dispatch({type: 'ERROR', error}))\n  }, [])\n\n  const setCurrentEmail = (email: EmailType) => {\n    dispatch({ type: 'SELECT', currentEmail: email })\n  }\n\n  const value = {\n    ...state,\n    setCurrentEmail\n  };\n\n  return (\n    <EmailContext.Provider value={value}>\n      {children}\n    </EmailContext.Provider>\n  )\n}\n\nexport const useEmail = () => {\n  return useContext(EmailContext);\n}\n","import React, { memo } from 'react'\nimport { useUser } from '../../context/UserContext';\nimport { useEmail } from '../../context/EmailContext';\nimport { EmailType } from '../../app.types';\nimport './index.css';\n\nconst MessageList = () => {\n  const { firstName } = useUser();\n  const { emails, errors, loading, setCurrentEmail } = useEmail();\n\n  return (\n    <div className=\"message-list\">\n      {errors && <p>There was an error!</p>}\n      {loading && <p>Loading ... </p>}\n      {!emails &&\n        <div className=\"no-messages\">\n          Your mailbox is empty, {firstName} 🎉🎉🎉\n        </div>\n      }\n      {emails &&\n        <ul className=\"message\">\n          {emails.map((item: EmailType) => (\n            <Email\n              key={item.id}\n              email={item}\n              onClick={setCurrentEmail}\n            />\n          ))}\n        </ul>\n      }\n    </div>\n  )\n}\n\nconst Email = memo((props: any) => {\n  const { email, onClick } = props;\n  return (\n    <li onClick={() => onClick(email)}>\n      <div className=\"subject\">{email.subject}</div>\n      <div className=\"preview\">{email.preview}</div>\n    </li>\n  )\n})\n\n\nexport default MessageList;\n","import React from 'react';\nimport { useEmail } from '../../context/EmailContext';\n\nconst MessageViewer = () => {\n  const { currentEmail, setCurrentEmail } = useEmail();\n\n  console.log('MV', currentEmail);\n\n  return (\n    <div className=\"MessageViewer\">\n      <h2>{currentEmail.subject}</h2>\n      <div>{currentEmail.body}</div>\n      <button onClick={() => setCurrentEmail(null)}>\n        Back\n      </button>\n    </div>\n  );\n};\n\nexport default MessageViewer;","import React from 'react'\nimport User from '../User';\nimport MessageList from '../MessageList';\nimport { useEmail } from '../../context/EmailContext';\nimport MessageViewer from '../MessageView';\n\nexport const Wrapper = () => {\n\n  const { currentEmail } = useEmail();\n\n  console.log('Wrapper', currentEmail);\n\n  return (\n    <div>\n      <User />\n      {currentEmail\n        ? <MessageViewer />\n        : <MessageList />\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport { Login } from './components/Login';\nimport { Wrapper } from './components/Wrapper';\nimport { useUser } from './context/UserContext';\n\nfunction App() {\n  const { username } = useUser();\n\n  return (\n    <div className=\"App\">\n      <h1>FakeMail</h1>\n        {username\n          ? <Wrapper />\n          : <Login />\n        }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { UserProvider } from './context/UserContext';\nimport { EmailProvider } from './context/EmailContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <EmailProvider>\n        <App />\n      </EmailProvider>\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}